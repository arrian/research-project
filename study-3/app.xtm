(define cocoa_app (sys:open-dylib "research-project/app.dylib"))

(bind-alias application i8)

(bind-lib cocoa_app app_create [application*]*)
(bind-lib cocoa_app app_destroy [void,application*]*)
(bind-lib cocoa_app app_update [void,application*])


(bind-val app application* 0)

(bind-func app_init
	(lambda ()
		(set! app (app_create))))

(app_init)

(bind-func app_step
  (lambda ()
    (app_update app)))

(app_step);;call once to init view

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(bind-alias polycode i8)
(bind-alias polycode_scenemesh i8)

(bind-lib cocoa_app app_get_polycode [polycode*,application*]*)

(bind-lib cocoa_app polycode_add_text [polycode_scenemesh*,polycode*,float,float,i8*,i32]*)
(bind-lib cocoa_app polycode_add_circle [polycode_scenemesh*,polycode*,float,float,float,float,i32,float,float,float]*);;pc,x,y,w,h,segs,r,g,b
(bind-lib cocoa_app polycode_add_line [polycode_scenemesh*,polycode*,polycode_scenemesh*,polycode_scenemesh*,float]*)
(bind-lib cocoa_app polycode_add_code [float,polycode*,float,float,i8*,i32]*)

(bind-lib cocoa_app polycode_set_color [void,polycode_scenemesh*,float,float,float]*)

(bind-lib cocoa_app polycode_clear_scene [void,polycode*]*)

(bind-val poly polycode* 0)

(bind-func poly_init
	(lambda ()
		(set! poly (app_get_polycode app))))

(poly_init)

(bind-func test_add_text
  (lambda (x y text size)
  		(polycode_set_color (polycode_add_text poly x y text size) 0.2 0.2 0.4)
  		(app_step)
  		void
    ))

(test_add_text 0 0 "Loading..." 45)

(bind-func test_add_circle
  (lambda ()
  		(polycode_add_circle poly (random -320.0 320.0) (random -240.0 240.0) 50.0 50.0 30 (random) (random) (random))
    ))

(test_add_circle)

(bind-func test_add_line
  (lambda (start end)
  		(polycode_add_line poly start end 5.0)
  		(app_step)
    ))





