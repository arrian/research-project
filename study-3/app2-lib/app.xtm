
(define polycode (sys:open-dylib *app-lib*));;"research-project/app2-lib/bin/app.dylib"))

;;core
(bind-alias poly_core i8)
(bind-lib polycode poly_core_create [poly_core*,i8*,i32,i32,i8*]*)
;;(bind-lib polycode poly_core_should_close [i1,poly_core*]*)
(bind-lib polycode poly_core_update [void,poly_core*]*)
(bind-lib polycode poly_core_destroy [void,poly_core*]*)

;;entity
(bind-alias poly_entity i8)
(bind-lib polycode poly_entity_set_position [void,poly_entity*,double,double]*)
(bind-lib polycode poly_entity_set_yaw [void,poly_entity*,double]*)
(bind-lib polycode poly_entity_add_child [void,poly_entity*,poly_entity*]*)
(bind-lib polycode poly_entity_set_color [void,poly_entity*,double,double,double,double]*)
(bind-lib polycode poly_entity_get_x [double,poly_entity*]*)
(bind-lib polycode poly_entity_get_y [double,poly_entity*]*)

;;2D physics entity
(bind-alias poly_physics_entity i8)
(bind-lib polycode poly_physics_entity_apply_force [void,poly_physics_entity*,double,double]*)
;; (bind-lib polycode poly_physics_entity_apply_torque [void,poly_physics_entity*,double]*)
;; (bind-lib polycode poly_physics_entity_apply_impulse [void,poly_physics_entity*,double,double]*)

(bind-lib polycode poly_physics_entity_set_velocity [void,poly_physics_entity*,double,double]*)
(bind-lib polycode poly_physics_entity_get_velocity_x [double,poly_physics_entity*]*)
(bind-lib polycode poly_physics_entity_get_velocity_y [double,poly_physics_entity*]*)

(bind-lib polycode poly_physics_entity_set_density [void,poly_physics_entity*,double]*)
(bind-lib polycode poly_physics_entity_get_density [double,poly_physics_entity*]*)
(bind-lib polycode poly_physics_entity_set_friction [void,poly_physics_entity*,double]*)
(bind-lib polycode poly_physics_entity_get_friction [double,poly_physics_entity*]*)

(bind-lib polycode poly_physics_entity_set_collision_category [void,poly_physics_entity*,i64]*)
(bind-lib polycode poly_physics_entity_set_collision_mask [void,poly_physics_entity*,i64]*)
(bind-lib polycode poly_physics_entity_set_collision_group_index [void,poly_physics_entity*,i64]*)

;;scene
(bind-alias poly_scene i8)
(bind-lib polycode poly_scene_create [poly_scene*,i32,i32]*)
(bind-lib polycode poly_scene_destroy [void,poly_scene*]*)
(bind-lib polycode poly_scene_add_child [void,poly_scene*,poly_entity*]*)

;;2D physics scene
(bind-lib polycode poly_scene_physics_set_gravity [void,poly_scene*,double,double]*)
(bind-lib polycode poly_scene_physics_add_child [poly_physics_entity*,poly_scene*,poly_entity*,i1]*)
(bind-lib polycode poly_scene_physics_remove_child [void,poly_scene*,poly_entity*]*)

;;scene image
(bind-alias poly_scene_image i8)
(bind-lib polycode poly_scene_image_create [poly_scene_image*,i8*]*)
(bind-lib polycode poly_scene_image_destroy [void,poly_scene_image*]*)

;;scene ui input
(bind-alias poly_scene_multi_label i8)
(bind-lib polycode poly_scene_multi_label_create [poly_scene_multi_label*,i8*,i32]*)
(bind-lib polycode poly_scene_multi_label_destroy [void,poly_scene_multi_label*]*)
(bind-lib polycode poly_scene_multi_label_set_text [void,poly_scene_multi_label*,i8*]*)

;;scene label
(bind-alias poly_scene_label i8)
(bind-lib polycode poly_scene_label_create [poly_scene_label*,i8*,i32]*)
(bind-lib polycode poly_scene_label_destroy [void,poly_scene_label*]*)
(bind-lib polycode poly_scene_label_set_text [void,poly_scene_label*,i8*]*)

;;scene primitive
(bind-alias poly_scene_primitive i8)
(bind-lib polycode poly_scene_primitive_create_cube [poly_scene_primitive*,double,double,double]*);;x size, y size, z size
(bind-lib polycode poly_scene_primitive_create_circle [poly_scene_primitive*,double,double,i32]*);;x size, y size, segments
(bind-lib polycode poly_scene_primitive_destroy [void,poly_scene_primitive*]*)
(bind-lib polycode poly_scene_primitive_set_circle_options [void,poly_scene_primitive*,double,double,i32]*)

;;initialisation
(bind-val POLY_CORE poly_core* 0)
(bind-val POLY_SCENE poly_scene* 0)

(bind-func poly_core_init
  (lambda (width height resources)
      (set! POLY_CORE (poly_core_create "Extempore" width height resources));;"/Users/Arrian/Dev/research-project/study-3/resources/default.pak"
      (set! POLY_SCENE (poly_scene_create width height))))

(bind-func poly_core_dest
  (lambda ()
      (poly_core_destroy POLY_CORE)
      (set! POLY_CORE null)
      (set! POLY_SCENE null)
      void))
