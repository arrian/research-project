
Research Project - Article Summaries

A principled approach to developing new languages for live coding
-Focusses on musicians entering the field of live coding
-Discuss domain specific languages (e.g. spreadsheets in accounting)
-Approaching live coding as a way to extend the musician rather than the programmer becoming a musician
-Interfacing with external hardware
-Cognitive ergonomics of language design
-Declarative constraint propagation
-Direct manipulation over indirect manipulation allows audience to perceive relationship between action and effect
-Use supercollider as the live coding platform
-Critical technical practice

Algorithms as Scores: Coding Live Music
-considers live coding as a new branch of musical score
-Kadinsky and Klee representing synchronic process (painting) as diachronic process (music)
-graphical representations of music
-graphical scores as special representation of an algorithm
-Claudia Molitor’s 3D Score Series - engaging with score
-Basically describes the history and modern live coding practice

An Approach to Musical Live Coding
-aa-cell performances
-does remapping a function to a random function produce measurable results
-Overview of the live coding environment and practice

Visual Music Instrument
-synæsthetic composition, computational expression and the dynamics of performance are important research axes
-History of live visual performances
-painted composition is closer to a single musical instance than it is to musical composition.
-music is abstract, visuals are moving that direction too
-Visual Music Instrument Design
-

A Principled Taxonomy of Software Visualisation
-level of abstraction vs level of animation
-aspect vs abstractness vs animation vs automation
-data vs code
-static vs animated
-No demonstrable gains from software visualisation seen
-Very old article

A Model-Based Visualisation Taxonomy
-scientific visualisation vs information visualisation
-model based visualisation taxonomy divides groups into continuous and discrete models
-continuous model divides into 3 dimensions including dependent variables, data type, and number of independent variables
-discrete model divides into connected and unconnected data types

 A Taxonomy of Glyph Placement Strategies for Multidimensional Data Visualisation
-shows taxonomy of glyph placement strategies
-not immediately relevant

A Taxonomy of Program Visualisation Systems
-Scope (Code, Data state, Control state, Behaviour)
-Abstraction Level (Direct representation, Structural representation, synthesised representation)
-Specification method (Predefinition, Annotation, Declaration, Manipulation)
-Interface (Simple objects, Composite objects, visual events, dimensionality, multiple worlds, control interaction, image interaction)
-Presentation (Analytical, Explanatory, Orchestration)

Improvising Synesthesia
-introduction of the term comprovisation
-has been no visual creative process in which the artistic process is available to the audience
-improvisation of visual art
-

Live Coding Towards Computational Creativity
-describes what live coding is and potential future directions in terms of computational creativity
-includes live coder survey (http://doc.gold.ac.uk/∼ma503am/writing/icccx/
-

Painterly Interface for Audiovisual Performance
-Describes the history of audio visual performance (incl. Castel’s Ocular Harpsichord, Thomas Wilfred’s Clavilux, Oskar Fischinger’s Lumigraph, Charles Dockum’s MobilColor Projector, )

AVVX - A Vector Graphics Tool for Audiovisual Performances
-Survey for ease of use and utility of the AVVX engine
-

Content-based Mood Classification for Photos and Music
-Variety of emotion classifications:
	-Thayer’s model: stress vs energy
	-Russell’s model: pleasantness vs alertness
	-Tellegen-Watson-Clark model: positive affect vs negative affect
	-Reisenzeins model: pleasantness vs alertness
-Classified images and music as: aggressive, euphoric, melancholic, calm
-Found that a combination of dimensional models and category-based models provided the most useful results

Dimensions in Program Synthesis
-Three dimensions in program synthesis: User intent, search space (expressiveness vs efficiency), search technique (eg. brute-force)

Dimensions of Software Architecture for Program Understanding
-Three dimensions of software architecture that affect user involvement: level of abstraction, degree of domain specific knowledge, degree of automation

Gathering Audience Feedback on an Audiovisual Performance
-Modes of engagement: Perceptive, interpretive and reflective