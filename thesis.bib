@article{Chen2008,
abstract = {Music players for personal computers are often featured with music visualization by generating animated patterns according to the music’s low-level features such as loudness and spectrum. This paper proposes an emotion-based music player which synchronizes visualization (photos) with music based on the emotions evoked by auditory stimulus of music and visual content of visualization. For emotion detection from photos, we collected 398 photos with their emotions annotated by 496 users through the web. With these annotations, a Bayesian classification method is proposed for automatic photo emotion detection. For emotion detection from music, we adopt an existing method. Finally, for composition of music and photos, in addition to matching high-level emotions, we also consider low-level feature harmony and temporal visual coherence. It is formulated as an optimization problem and solved by a greedy algorithm. Subjective evaluation shows emotion-based music visualization enriches users’ listening experiences.},
author = {Chen, Chin-Han and Weng, Mf and Jeng, Sk and Chuang, Yy},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisations/Emotion-based Music Visualisation using Photos - Chen et al.pdf:pdf},
journal = {Advances in Multimedia \ldots},
keywords = {emotion detection,music visualization},
pages = {358--368},
title = {{Emotion-based music visualization using photos}},
url = {http://dx.doi.org/10.1007/978-3-540-77409-9\_34$\backslash$nhttp://www.springerlink.com/content/w09173015722j471/$\backslash$nhttp://link.springer.com/chapter/10.1007/978-3-540-77409-9\_34 http://link.springer.com/chapter/10.1007/978-3-540-77409-9\_34},
volume = {4903},
year = {2008}
}
@article{Desmond,
author = {Desmond, Michael and Canada, B C and Exton, Chris},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisations/Fluid Source Code Views for Just In-Time Comprehension - Desmond, Storey and Exton.pdf:pdf},
pages = {1--4},
title = {{Fluid Source Code Views for Just In-Time Comprehension}}
}
@article{Gerber2006,
author = {Gerber, Anna and Brown, Andrew R},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualising Music with Impromptu - Gerber and Brown.pdf:pdf},
pages = {38--43},
title = {{Visualising Music with Impromptu}},
year = {2006}
}
@article{Hosking2005,
author = {Hosking, John and Grundy, John},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisations/Information Visualisation utilising 3D Computer Game Engines - Kot.pdf:pdf},
number = {February},
title = {{Faculty of Science Summer Scholarship Report Information Visualisation utilising 3D Computer Game Engines Case Study : A source code comprehension tool Blazej Kot Supervised by : Burkhard Wuensche}},
year = {2005}
}
@article{McLean2010a,
abstract = {In this paper we outline the issues surrounding live coding which is projected for an audience, and in this context, approaches to code visualisation. This includes natural language parsing techniques, using geometrical properties of space in language semantics, representation of execution flow in live coding environments, code as visual data and computer games as live coding environments. We will also touch on the unifying perceptual basis behind symbols, graphics, movement and sound.},
author = {McLean, a and Griffiths, Dave and Collins, Nick},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisations/Visualisation of Live Code - McLean.pdf:pdf},
journal = {Visualisation and the Arts},
pages = {1--5},
title = {{Visualisation of live code}},
url = {http://yaxu.org/writing/visualisation-of-live-code.pdf},
year = {2010}
}
@article{Chi2000,
author = {Chi, EH},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Taxonomy of Visualisation Techniques using the Data State Reference Model - Chi.pdf:pdf},
journal = {Information Visualization, 2000. InfoVis 2000. IEEE \ldots},
keywords = {data state model,information visualization,operators,reference model,taxonomy,techniques},
number = {Table 2},
title = {{A taxonomy of visualization techniques using the data state reference model}},
url = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=885092},
volume = {94301},
year = {2000}
}
@article{Fronk,
author = {Fronk, Alexander and Gude, Dietmar and Rinkenauer, Gerhard},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisations/02Fronk.pdf:pdf},
title = {{Evaluating 3D-Visualisation of Code Structures in the Context of Reverse Engineering}}
}
@article{Jordan1849,
author = {Jordan, Ken},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Technologies for Music Dance and Staging in Operas - Mazzola et al.pdf:pdf},
number = {3},
title = {{Visualization Technologies for Music , Dance , and Staging in Operas}},
volume = {19},
year = {1849}
}
@article{Myers1989,
author = {Myers, Brad A},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/Taxonomies of Visual Programming and Program Visualisation - Myers.pdf:pdf},
title = {{Taxonomies of Visual Programming and P rogram Visualization Taxonomies of Visual Programmin g and Program Visualizatio n}},
year = {1989}
}
@article{Price1992,
abstract = {Software visualization is the use of interactive computer
graphics, typography, graphic design, animation, and cinematography to
enhance the interface between the software engineer or the computer
science student and their programs. Although several taxonomies of
software visualization have been proposed, they use few dimensions and
do not span the space of important distinctions between systems. The
authors propose a novel and systematic taxonomy of six areas making up
thirty characteristic features of software visualization technology. The
taxonomy is presented and illustrated in terms of its application to
seven systems of historic importance and technical interest},
author = {Price, B.a. and Small, I.S. and Baecker, R.M.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Taxonomy of Software Visualisation - Price et al.pdf:pdf},
isbn = {1416978518},
journal = {Proceedings of the Twenty-Fifth Hawaii International Conference on System Sciences},
title = {{A taxonomy of software visualization}},
volume = {ii},
year = {1992}
}
@article{Tory2004,
abstract = {We present the novel high-level visualization taxonomy. Our taxonomy classifies visualization algorithms rather than data. Algorithms are categorized based on the assumptions they make about the data being visualized; we call this set of assumptions the design model. Because our taxonomy is based on design models, it is more flexible than existing taxonomies and considers the user's conceptual model, emphasizing the human aspect of visualization. Design models are classified according to whether they are discrete or continuous and by how much the algorithm designer chooses display attributes such as spatialization, timing, colour, and transparency. This novel approach provides an alternative view of the visualization field that helps explain how traditional divisions (e.g., information and scientific visualization) relates and overlap, and that may inspire research ideas in hybrid visualization areas},
author = {Tory, M. and Moller, T.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/Rethinking Visualisation - A High-Level Taxonomy - Tory and Moller.pdf:pdf},
isbn = {0780387791},
journal = {IEEE Symposium on Information Visualization},
keywords = {classification,conceptual model,design model,taxonomy,user model,visualization},
pages = {151--158},
title = {{Rethinking Visualization: A High-Level Taxonomy}},
year = {2004}
}
@article{Dulic,
author = {Dulic, Aleksandra and Hamel, Keith},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visual Music Instrument - Dulic and Hamel.pdf:pdf},
keywords = {compiler,shared memory parallel programming,task graph,task scheduling},
title = {{Visual Music Instrument}}
}
@article{Milgram1994,
abstract = {This paper focuses on Mixed Reality (MR) visual displays, a particular subset of Virtual Reality (VR) related technologies that involve the merging of real and virtual worlds somewhere along the "virtuality continuum" which connects completely real environments to completely virtual ones. Probably the best known of these is Augmented Reality (AR), which refers to all cases in which the display of an otherwise real environment is augmented by means of virtual (computer graphic) objects. The converse case on the virtuality continuum is therefore Augmented Virtuality (AV). Six classes of hybrid MR display environments are identified. However, an attempt to distinguish these classes on the basis of whether they are primarily video or computer graphics based, whether the real world is viewed directly or via some electronic display medium, whether the viewer is intended to feel part of the world or on the outside looking in, and whether or not the scale of the display is intended to map orthoscopically onto the real world leads to quite different groupings among the six identified classes, thereby demonstrating the need for an efficient taxonomy, or classification framework, according to which essential differences can be identified. The 'obvious' distinction between the terms "real" and "virtual" is shown to have a number of different aspects, depending on whether one is dealing with real or virtual objects, real or virtual images, and direct or non-direct viewing of these. An (approximately) three dimensional taxonomy is proposed, comprising the following dimensions: Extent of World Knowledge ("how much do we know about the world being displayed?"), Reproduction Fidelity ("how 'realistically' are we able to display it?"), and Extent of Presence Metaphor ("what is the extent of the illusion that the observer is present within that world?"). key words: virtual reality (VR), augmented reality (AR), mixed reality (MR)},
author = {Milgram, Paul and Kishino, Fumio},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/72e7e52ade5e1713ea.pdf:pdf},
journal = {IEICE TRANSACTIONS on Information and Systems},
keywords = {augmented reality,mixed reality,review--virtual reality,virtual reality},
number = {12},
pages = {1321--1329},
title = {{A taxonomy of mixed reality visual displays}},
volume = {77},
year = {1994}
}
@article{Price1993,
author = {Price, BA and Baecker, RM and Small, IS},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Principled Taxonomy of Software Visualisation - Price et al.pdf:pdf},
journal = {Journal of Visual Languages \& Computing},
title = {{A principled taxonomy of software visualization}},
url = {http://www.sciencedirect.com/science/article/pii/S1045926X83710153},
year = {1993}
}
@article{Roman1993,
abstract = {A taxonomy of program visualization systems that is based on a
model of program visualization that maps programs to graphical
representations is presented. The taxonomy is illustrated with three
program visualization systems representative of research trends: Zeus,
Tango, and Pavane},
author = {Roman, G.-C. and Cox, K.C.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Taxonomy of Program Visualisation Systems - Roman and Cox.pdf:pdf},
journal = {Computer},
number = {12},
title = {{A taxonomy of program visualization systems}},
volume = {26},
year = {1993}
}
@article{Tory2002,
abstract = {Frameworks for organizing literature and ideas in visualization are valuable since they allow us to gain a higherlevel understanding of the state of visualization research. Current taxonomies of visualization techniques are problematic because the terminology is vague. We present a new taxonomy based on models of a data set rather than attributes of the data itself. This method addresses several problems with existing classification schemes and generates less ambiguous visualization categories.},
author = {Tory, Melanie and M\"{o}ller, Torsten},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Model-Based Visualisation Taxonomy - Torey and Moller.pdf:pdf},
institution = {Computing Science Dept., Simon Fraser University},
isbn = {9816568465165},
journal = {Structure},
keywords = {classification,taxonomy,visualization},
number = {CMPT-TR2002-06},
pages = {4},
publisher = {Computer Science Dept., Simon Fraser University},
title = {{A Model-Based Visualization Taxonomy}},
url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.12.6920\&amp;rep=rep1\&amp;type=pdf},
year = {2002}
}
@article{Ward2002,
abstract = {Glyphs (also referred to as icons) are graphical entities that convey one or more data values via attributes such as shape, size, color, and position. They have been widely used in the visualization of data and information, and are especially well suited for displaying complex, multivariate data sets. The placement or layout of glyphs on a display can communicate significant information regarding the data values themselves as well as relationships between data points, and a wide assortment of placement strategies have been developed to date. Methods range from simply using data dimensions as positional attributes to basing placement on implicit or explicit structure within the data set. This paper presents an overview of multivariate glyphs, a list of issues regarding the layout of glyphs, and a comprehensive taxonomy of placement strategies to assist the visualization designer in selecting the technique most suitable to his or her data and task. Examples, strengths, weaknesses, and design considerations are given for each category of technique. We conclude with some general guidelines for selecting a placement strategy, along with a brief description of some of our future research directions.},
author = {Ward, Matthew O},
doi = {10.1057/palgrave.ivs.9500025},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visualisation Taxonomy/A Taxonomy of Glyph Placement Strategies for Multidimensional Data Visualisation - Ward.pdf:pdf},
issn = {14738716},
journal = {Information Visualization},
month = dec,
number = {3-4},
pages = {194--210},
title = {{A taxonomy of glyph placement strategies for multidimensional data visualization}},
url = {http://ivi.sagepub.com/lookup/doi/10.1057/palgrave.ivs.9500025},
volume = {1},
year = {2002}
}
@article{Blackwell2005,
author = {Blackwell, Alan and Collins, Nick},
file = {:Users/arrian/Desktop/COMP4540/Articles/The Programming Language as a Musical Instrument - Blackwell and Collins.pdf:pdf},
journal = {\ldots of PPIG05 (Psychology of Programming \ldots},
pages = {1--11},
title = {{The programming language as a musical instrument}},
url = {http://www.sussex.ac.uk/Users/nc81/research/proglangasmusicinstr.pdf},
year = {2005}
}
@article{Hendrix2002,
abstract = {Recently, the first two in a series of planned comprehension
experiments were performed to measure the effect of the control
structure diagram (CSD) on program comprehensibility. Upper- and
lower-division computer science and software engineering students were
asked to respond to questions regarding the structure and execution of
one source code module of a public domain graphics library. The time
taken for each response and the correctness of each response was
recorded. Statistical analysis of the data collected from these two
experiments revealed that the CSD was highly significant in enhancing
the subjects' performance in this program comprehension task. The
results of these initial experiments promise to shed light on
fundamental questions regarding the effect of software visualizations on
program comprehensibility},
author = {Hendrix, D. and Cross, J.H., Ii and Maghsoodloo, S.},
file = {:Users/arrian/Desktop/COMP4540/Articles/The Effectiveness of Control Structure Diagrams in Source Code Comprehension Activities - Hendrix, Cross and Maghsoodloo.pdf:pdf},
journal = {IEEE Transactions on Software Engineering},
number = {5},
pages = {463--477},
title = {{The effectiveness of control structure diagrams in source code
comprehension activities}},
volume = {28},
year = {2002}
}
@article{McLean2010,
abstract = {Computer language for the description of pattern has been employed for both analysis and composition of music. In this paper we investigate the latter, with particular inter- est in pattern language for use in live coding performance [1]. Towards this end we introduce Tidal, a pattern lan- guage designed for music improvisation, and embedded in the Haskell programming language. Tidal represents polyphonic patterns as a time varying function, providing an extensible range of pattern genera- tors and combinators for composing patterns out of hier- archies of sub-patterns. Open Sound Control (OSC) mes- sages are used to trigger sound events, where each OSC parameter may be expressed as a pattern. Tidal is designed to allow patterns to be created and modified during a live coded performance, aided by terse, expressive syntax and integration with an emerging time synchronisation stan- dard. 1.},
author = {McLean, a. and Wiggins, Geraint},
file = {:Users/arrian/Desktop/COMP4540/Articles/Tidal - Pattern Language for Live Coding of Music - McLean and Wiggins.pdf:pdf},
journal = {Proceedings of the 7th Sound and Music Computing conference},
title = {{Tidal – Pattern Language for Live Coding of Music}},
url = {http://www.smc-conference.org/smc10/smcnetwork.org/files/proceedings/2010/39.pdf},
year = {2010}
}
@article{Rajlich2002,
abstract = { The paper presents an overview of the role of concepts in program comprehension. It discusses concept location, in which the implementation of a specific concept is located in the code. This process is very common and precedes a large proportion of code changes. The paper also discusses the process of learning about the domain from the code, which is a prerequisite of code reengineering. The paper notes the similarities and overlaps between program comprehension and human learning.},
author = {Rajlich, V. and Wilde, N.},
file = {:Users/arrian/Desktop/COMP4540/Articles/The Role of Concepts in Code Comprehension.pdf:pdf},
isbn = {0769514952},
journal = {Proceedings 10th International Workshop on Program Comprehension},
pages = {271--278},
title = {{The role of concepts in program comprehension}},
year = {2002}
}
@article{Swift2013,
author = {Swift, Ben and Sorensen, Andrew and Gardner, Henry and Hosking, John},
file = {:Users/arrian/Desktop/COMP4540/Articles/Visual Code Annotations for Cyberphysical Programming - Swift, Sorensen, Gardner and Hosking.pdf:pdf},
isbn = {9781467362658},
pages = {27--30},
title = {{Visual Code Annotations for Cyberphysical Programming}},
year = {2013}
}
@article{Nosek1998,
abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article. ACM has opted to expose the complete List rather than only correct and linked references.},
author = {Nosek, John T.},
file = {:Users/arrian/Desktop/COMP4540/Articles/The Case for Collaborative Programming - Nosek.pdf:pdf},
journal = {Communications of the ACM},
number = {3},
pages = {105--108},
title = {{The case for collaborative programming}},
volume = {41},
year = {1998}
}
@article{Oda2013,
author = {Oda, Tomohiro},
file = {:Users/arrian/Desktop/COMP4540/Articles/SOMETHINGit - A Prototyping Library for Live and Sound Improvisation - Oda et al.pdf:pdf},
isbn = {9781467362658},
pages = {13--16},
title = {{SOMETHINGit : A Prototyping Library for Live and Sound Improvisation}},
year = {2013}
}
@article{Robillard2007,
abstract = {A software modification task often addresses several concerns. A concern is anything a stakeholder may want to consider as a conceptual unit, including features, nonfunctional requirements, and design idioms. In many cases, the source code implementing a concern is not encapsulated in a single programming language module, and is instead scattered and tangled throughout a system. Inadequate separation of concerns increases the difficulty of evolving software in a correct and cost-effective manner. To make it easier to modify concerns that are not well modularized, we propose an approach in which the implementation of concerns is documented in artifacts, called concern graphs. Concern graphs are abstract models that describe which parts of the source code are relevant to different concerns. We present a formal model for concern graphs and the tool support we developed to enable software developers to create and use concern graphs during software evolution tasks. We report on five empirical studies, providing evidence that concern graphs support views and operations that facilitate the task of modifying the code implementing scattered concerns, are cost-effective to create and use, and robust enough to be used with different versions of a software system.},
author = {Robillard, Martin P. and Murphy, Gail C.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Representing Concerns in Source Code - Robillard.pdf:pdf},
journal = {ACM Transactions on Software Engineering and Methodology},
number = {1},
pages = {3--es},
title = {{Representing concerns in source code}},
volume = {16},
year = {2007}
}
@article{Ruthmann2010,
abstract = {This paper discusses our ongoing experiences in developing an interdisciplinary general education course called Sound Thinking that is offered jointly by our Dept. of Computer Science and Dept. of Music. It focuses on the student outcomes we are trying to achieve and the projects we are using to help students realize those outcomes. It explains why we are moving from a web-based environment using HTML and JavaScript to Scratch and discusses the potential for Scratchs musical live coding capability to reinforce those concepts even more strongly.},
author = {Ruthmann, Alex and Heines, Jesse M and Greher, Gena R and Laidler, Paul and Ii, Charles Saulters},
file = {:Users/arrian/Desktop/COMP4540/Articles/Teaching Computational Thinking through Live Coding in Scratch - Ruthmann et al.pdf:pdf},
isbn = {9781605581835},
journal = {Proceedings of the 41st ACM technical symposium on Computer science education},
pages = {351--355},
publisher = {ACM Press},
series = {SIGCSE '10},
title = {{Teaching Computational Thinking through Musical Live Coding in Scratch}},
url = {http://portal.acm.org/citation.cfm?doid=1734263.1734384},
year = {2010}
}
@article{Sakellion2011,
author = {Sakellion, Y and Da, Y},
file = {:Users/arrian/Desktop/COMP4540/Articles/Structured Spontaneity - Sakellion and Da.pdf:pdf},
journal = {Leonardo Electronic Almanac},
number = {3},
title = {{Structured Spontaneity}},
volume = {19},
year = {2011}
}
@book{Hutchison,
author = {Hutchison, David and Mitchell, John C},
file = {:Users/arrian/Desktop/COMP4540/Articles/Reflections on the Teaching of Programming - Bennedsen et al.pdf:pdf},
isbn = {9783540779339},
title = {{Lecture Notes in Computer Science}}
}
@article{Amiri2011,
abstract = {The number of university undergraduate courses in the area of interactive media is increasing. Many of these courses are based in the schools of art and design that have traditionally valued and focused on developing the aesthetic and artistic design skills of their students. However, because of the rapid changes in new technology the relation between the technology and design has become complex. This poses new challenges for the educators in this field. The main challenge is defining the role of programming in the curriculum and the relationship between ‘coding’ skills and ‘design’ skills. The article examines different conceptual models of programming and suggests that the concept of programming as artistic and creative practice and ‘programming as design’ would be more suitable for the art and design curriculum.},
author = {Amiri, Faramarz},
file = {:Users/arrian/Desktop/COMP4540/Articles/Programming as Design - The Role of Programming in Interactive Media Curriculum in Art and Design - Amiri.pdf:pdf},
journal = {International Journal of Art \& Design Education},
number = {2},
pages = {200--210},
title = {{Programming as design: The role of programming in interactive media curriculum in art and design}},
volume = {30},
year = {2011}
}
@article{Hockley2010,
author = {Hockley, NS and Bahlmann, F and Chasin, M},
file = {:Users/arrian/Desktop/COMP4540/Articles/Programming Hearing Instruments to Make Live Music More Enjoyable - Hockley, Bahlmann and Chasin.pdf:pdf},
journal = {The Hearing Journal},
number = {9},
title = {{Programming hearing instruments to make live music more enjoyable}},
url = {http://journals.lww.com/thehearingjournal/Abstract/2010/09000/Programming\_hearing\_instruments\_to\_make\_live\_music.6.aspx},
volume = {63},
year = {2010}
}
@article{Levin,
author = {Levin, G.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Painterly Interfaces for Audiovisual Performance -Levin.pdf:pdf},
title = {{Painterly Interfaces for Audiovisual Performance}}
}
@article{McLean2010b,
abstract = {In this paper we outline the issues surrounding live coding which is projected for an audience, and in this context, approaches to code visualisation. This includes natural language parsing techniques, using geometrical properties of space in language semantics, representation of execution flow in live coding environments, code as visual data and computer games as live coding environments. We will also touch on the unifying perceptual basis behind symbols, graphics, movement and sound.},
author = {McLean, a and Griffiths, Dave and Collins, Nick},
file = {:Users/arrian/Desktop/COMP4540/Articles/Proceedings of Electronic\_\_ Visualisation and the Arts 2010 McLean.pdf:pdf},
journal = {Visualisation and the Arts},
pages = {1--5},
title = {{Visualisation of live code}},
url = {http://yaxu.org/writing/visualisation-of-live-code.pdf},
year = {2010}
}
@article{Collins2011,
author = {Collins, Nick},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Coding of Consequence - Collins.pdf:pdf},
journal = {Leonardo},
number = {3},
pages = {207--211},
title = {{Live Coding of Consequence}},
url = {http://www.mitpressjournals.org/doi/abs/10.1162/LEON\_a\_00164},
volume = {44},
year = {2011}
}
@article{Collins2003,
author = {Collins, Nick and McLean, A},
doi = {10.1017/00000000000000000},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Coding in Laptop Performance - Collins et al.pdf:pdf},
isbn = {0000000000000},
journal = {Organised \ldots},
number = {3},
pages = {321--329},
title = {{Live coding in laptop performance}},
url = {http://journals.cambridge.org/production/action/cjoGetFulltext?fulltextid=216000},
volume = {8},
year = {2003}
}
@article{Freeman2012,
author = {Freeman, T.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Outsourcing the VJ - Freeman.pdf:pdf},
number = {3},
title = {{Outsourcing the VJ}},
volume = {19},
year = {2012}
}
@article{Mclean,
author = {Mclean, Alex and Wiggins, Geraint},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Coding Towards Computational Creativity - McLean and Wiggins.pdf:pdf},
title = {{Live Coding Towards Computational Creativity}}
}
@article{Nilson2007,
abstract = {Live coding is almost the antithesis of immediate physical musicianship, and yet, has attracted the attentions of a number of computer-literate musicians, as well as the music-savvy programmers that might be more expected. It is within the context of live coding that I seek to explore the question of practising a contemporary digital musical instrument, which is often raised as an aside but more rarely carried out in research (though see [12]). At what stage of expertise are the members of the live coding movement, and what practice regimes might help them to find their true potential?},
author = {Nilson, Click},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Coding Practice - Nilson.pdf:pdf},
journal = {Proceedings of the 7th international conference on New interfaces for musical expression - NIME '07},
keywords = {live coding,practice,practising},
pages = {112},
publisher = {ACM Press},
title = {{Live coding practice}},
url = {http://portal.acm.org/citation.cfm?doid=1279740.1279760},
year = {2007}
}
@article{Paxton,
author = {Paxton, John},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Programming as a Lecture Technique - Paxton.pdf:pdf},
pages = {51--56},
title = {{Live programming as a lecture technique *}}
}
@article{Stowell2013,
address = {London},
author = {Stowell, Dan and Mclean, Alex},
doi = {10.1007/978-1-4471-2990-5},
editor = {Holland, Simon and Wilkie, Katie and Mulholland, Paul and Seago, Allan},
file = {:Users/arrian/Desktop/COMP4540/Articles/Live Music Making - A Rich Open Task Requires a Rich Open Interface - Stowell and McLean.pdf:pdf},
isbn = {978-1-4471-2989-9},
pages = {139--152},
publisher = {Springer London},
series = {Springer Series on Cultural Computing},
title = {{Music and Human-Computer Interaction}},
url = {http://link.springer.com/10.1007/978-1-4471-2990-5},
year = {2013}
}
@article{Brown2009,
abstract = {All music performances are generative to the extent that the actions of performers produce musical sounds, but in this article the authors focus on performative interaction with generative music in a more compositional sense. In particular they discuss how live coding of music involves the building and management of generative processes. They suggest that the human interaction with generative processes that occurs in live coding provides a unique perspective on the generative music landscape. Especially significant is the way in which generative algorithms are represented in code to best afford interaction and modification during performance. They also discuss the features of generative processes that make them more or less suitable for live coding performances. They situate live coding practice within historical and theoretical contexts and ground the discussion with regular reference to their experiences performing in the live coding duo aa-cell.},
author = {Brown, Andrew R. and Sorensen, Andrew},
file = {:Users/arrian/Desktop/COMP4540/Articles/Interacting with Generative Music through Live Coding - Brown and Sorensen.pdf:pdf},
journal = {Contemporary Music Review},
keywords = {algorithm,interaction,live coding,performance},
number = {1},
pages = {17--29},
title = {{Interacting with Generative Music through Live Coding}},
volume = {28},
year = {2009}
}
@article{Mailman,
author = {Mailman, J.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Improvising Synesthesia - Mailman.pdf:pdf},
isbn = {9781906897222},
journal = {Leonardo Electronic Almanac},
number = {3},
title = {{Improving Synesthesia}},
volume = {19}
}
@article{Sa,
author = {Sa, A.},
file = {:Users/arrian/Desktop/COMP4540/Articles/How an Audio-Visual Instrument can Foster the Sonic Experience - Sa.pdf:pdf},
number = {3},
title = {{How An Audio-Visual Instrument Can Foster The Sonic Experience}},
volume = {19}
}
@article{Bennedsen2008,
author = {Bennedsen, Jens and Caspersen, ME},
file = {:Users/arrian/Desktop/COMP4540/Articles/Exposing the Programming Process - Bennedsen and Caspersen.pdf:pdf},
journal = {\ldots on the Teaching of Programming},
pages = {6--16},
title = {{Exposing the programming process}},
url = {http://link.springer.com/chapter/10.1007/978-3-540-77934-6\_2},
year = {2008}
}
@article{Boyer2008,
abstract = {While collaborative approaches in the classroom have been shown to be highly beneficial for students of computer science, obstacles inherent in today’s academic environment often prevent collocated collaborative approaches from being implemented. One solution to the collocation problem may lie with tools that facilitate distributed collaboration. This paper presents RIPPLE (Remote Interactive Pair Programming and Learning Environment), a development environment for distributed synchronous collaborative programming. RIPPLE is an open source software tool. Initial user tests demonstrate positive responses from students, and the potential for long term learning, motivation, and retention benefits is significant. In addition to its benefits for students, RIPPLE is a tool for computing education researchers who wish to collect data on collaborative programming.},
author = {Boyer, Kristy Elizabeth and Dwight, August a. and Fondren, R. Taylor and Vouk, Mladen a. and Lester, James C.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Distributed Programming/A Development Environment for Distributed Synchronous Collaborative Programming - Boyer et al.pdf:pdf},
isbn = {9781605581156},
journal = {ACM SIGCSE Bulletin},
keywords = {active learning,distance,distributed collaboration,distributed pair programming,distributed tutoring,laboratory,learning,programming environments},
number = {3},
pages = {158},
title = {{A development environment for distributed synchronous collaborative programming}},
volume = {40},
year = {2008}
}
@article{Dunker2008,
abstract = {Mood or emotion information are often used search terms or navigation properties within multimedia archives, retrieval systems or multimedia players. Most of these applications engage end-users or experts to tag multimedia objects with mood annotations. Within the scientific community different approaches for content-based music, photo or multimodal mood classification can be found with a wide range of used mood definitions or models and completely different test suites. The purpose of this paper is to review common mood models in order to assess their exibility, to present a generic multi-modal mood classification framework which uses various audio-visual features and multiple classifiers and to present a novel music and photo mood classification reference set for evaluation. The classification framework is the basis for different applications e.g. automatic media tagging or music slideshow players. The novel reference set can be used for comparison of different algorithms from various research groups. Finally, the results of the introduced framework are presented, discussed and conclusions for future steps are drawn. Copyright 2008 ACM.},
author = {Dunker, Peter and Nowak, Stefanie and Begau, Andr\'{e} and Lanz, Cornelia},
file = {:Users/arrian/Desktop/COMP4540/Articles/Content-based Mood Classification for Photos and Music - Dunker.pdf:pdf},
isbn = {9781605583129},
journal = {Proceedings of the 1st \{ACM\} international conference on Multimedia information retrieval},
keywords = {all or part of,evaluation,image content analysis,mu-,multi-modal mood classification,or hard copies of,permission to make digital,sic information retrieval,this work for},
pages = {97--104},
publisher = {Acm},
shorttitle = {Content-based mood classification for photos and m},
title = {{Content-based mood classification for photos and music: a generic multi-modal classification framework and evaluation approach}},
url = {http://dl.acm.org/citation.cfm?id=1460114},
year = {2008}
}
@article{Live2012,
author = {Live, T H E and Aesthetic, Audiovisual},
file = {:Users/arrian/Desktop/COMP4540/Articles/Gathering Audience Feedback on an Audiovisual Performance - McCarthy.pdf:pdf},
number = {3},
title = {{Gathering Audience Feedback on an Audiovisual Performance}},
volume = {19},
year = {2012}
}
@article{Schenk2013,
abstract = {Background: Distributed Pair Programming can be performed via screensharing or via a distributed IDE. The latter offers the freedom of concurrent editing (which may be helpful or damaging) and has even more awareness deficits than screen sharing. Objective: Characterize how competent distributed pair programmers may handle this additional freedom and these additional awareness deficits and characterize the impacts on the pair programming process. Method: A revelatory case study, based on direct observation of a single, highly competent distributed pair of industrial software developers during a 3-day collaboration. We use recordings of these sessions and conceptualize the phenomena seen. Results: 1. Skilled pairs may bridge the awareness deficits without visible obstruction of the overall process. 2. Skilled pairs may use the additional editing freedom in a useful limited fashion, resulting in potentially better fluency of the process than local pair programming. Conclusion: When applied skillfully in an appropriate context, distributed-pair programming can (not will!) work at least as well as local pair programming.},
archivePrefix = {arXiv},
arxivId = {1311.6249},
author = {Schenk, Julia and Prechelt, Lutz and Salinger, Stephan},
eprint = {1311.6249},
file = {:Users/arrian/Desktop/COMP4540/Articles/Distributed Programming/Distributed-Pair Programming can work well and is not just Distributed Pair-Programming.pdf:pdf},
keywords = {collaboration,distributed pair programming,distributed software development,gramming,pair pro-},
month = nov,
title = {{Distributed-Pair Programming can work well and is not just Distributed Pair-Programming}},
url = {http://arxiv.org/abs/1311.6249},
year = {2013}
}
@article{DeLine2005,
abstract = { Large software projects often require a programmer to make changes to unfamiliar source code. This paper describes a set of tools, called Team Tracks, designed to ease program comprehension by showing the source code navigation patterns of fellow development team members. One technique shows a list of related items, given that the user is viewing a given method or class. Another technique shows the favorite classes, by showing a class hierarchy view that hides less frequently visited classes, methods, and members. Two user studies, a laboratory study and a field study, were run to evaluate the effectiveness of these techniques. The results of the two studies demonstrate that sharing navigation data can improve program comprehension and is subjectively preferred by users.},
author = {DeLine, R. and Czerwinski, M. and Robertson, G.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/Easing Program Comprehension by Sharing Navigation Data.pdf:pdf},
journal = {2005 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC'05)},
title = {{Easing program comprehension by sharing navigation data}},
year = {2005}
}
@article{Gravino2010,
abstract = {This paper presents a controlled experiment to investigate whether the comprehension of source code increases in case novice software engineers use abstract software models produced in the early phase of the software development, i.e., requirements analysis. The study has revealed that there is not significant difference in the comprehension of source code achieved by using or not abstract software models.},
author = {Gravino, Carmine and Tortora, Genoveffa and Scanniello, Giuseppe},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/An Empirical Investigation on the Relation between Analysis Models and Source Code Comprehension - Gravino, Tortora and Scanniello.pdf:pdf},
isbn = {9781605586380},
journal = {Proceedings of the 2010 ACM Symposium on Applied Computing},
keywords = { controlled experiment, software maintenance,UML},
pages = {2365--2366},
publisher = {Acm},
series = {SAC '10},
title = {{An empirical investigation on the relation between analysis models and source code comprehension}},
url = {http://doi.acm.org/10.1145/1774088.1774576},
year = {2010}
}
@article{Lucia2006,
abstract = {In this paper we present an Eclipse plug-in, called COCONUT (COde COmprehension Nurturant Using Traceability), that shows the similarity level between the source code under development and high-level artefacts the source code should be traced onto. Also, the plug-in suggests candidate source code identifiers according to the domain terms contained into the corresponding high-level artefacts. Experiments showed that the plug-in helps to produce source code easier to be understood},
author = {Lucia, a. De and Penta, M. Di and Oliveto, R. and Zurolo, F.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/Code Comprehension Nurturant Using Traceability - Lucia et al.pdf:pdf},
isbn = {0769523544},
journal = {2006 22nd IEEE International Conference on Software Maintenance},
pages = {2--3},
title = {{COCONUT: COde COmprehension Nurturant Using Traceability}},
year = {2006}
}
@article{Mayrhauser1994,
author = {Mayrhauser, A. Von and Vans, A.M.},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/Comprehension Processes During Large Scale Maintenance - Mayrhauser and Vans.pdf:pdf},
journal = {\ldots of the 16th international conference on \ldots},
title = {{Comprehension processes during large scale maintenance}},
url = {http://dl.acm.org/citation.cfm?id=257741},
year = {1994}
}
@article{Mayrhauser1993,
abstract = {A major portion of the software maintenance effort is spent on the
reverse engineering activity of understanding existing software. If one
can learn more about how programmers understand code successfully, one
can build better tools to support the understanding process. This
contributes to higher quality and improved efficiency of maintenance
tasks. An integrated code comprehension model and experiences with it in
an industrial setting are presented. Audio-taped, think-aloud reports
were used to investigate how well the integrated code comprehension
model works during industrial maintenance activities that range from
code fixes to enhancements, code leverage, and reuse. The tapes were
analyzed for information needs during maintenance activities, and tool
capabilities were derived accordingly. The results are presented and
discussed},
author = {Mayrhauser, a. Von and a.M. Vans},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/From Code Understanding Needs to Reverse Engineering Tool Capabilities - Mayrhauser and Vans.pdf:pdf},
journal = {Proceedings of 6th International Workshop on Computer-Aided Software Engineering},
title = {{From code understanding needs to reverse engineering tool
capabilities}},
year = {1993}
}
@article{Mayrhauser1993a,
abstract = {A major portion of the maintenance effort is spent understanding
existing software. The authors present an integrated code comprehension
model and experiences with it in an industrial setting. They use
audio-taped, think-aloud reports to investigate how well this integrated
code comprehension model works during industrial maintenance activities
ranging from code fixes to enhancements, code leverage, and reuse. They
analyze the tapes for information needs during maintenance activities
and derive tool capabilities accordingly},
author = {Mayrhauser, a. Von and a.M. Vans},
file = {:Users/arrian/Desktop/COMP4540/Articles/Code Comprehension/From Program Comprehension to Tool Requirements for an Industrial Environment - Mayrhauser and Vans.pdf:pdf},
journal = {[1993] IEEE Second Workshop on Program Comprehension},
title = {{From program comprehension to tool requirements for an industrial
environment}},
year = {1993}
}
@article{Correia2012,
author = {Correia, N},
file = {:Users/arrian/Desktop/COMP4540/Articles/AVVX - A Vector Graphics Tool for Audiovisual Performances - Correia.pdf:pdf},
journal = {Leonardo Electronic Almanac},
number = {3},
title = {{AVVX - a vector graphics tool for audiovisual performances}},
volume = {19},
year = {2012}
}
@article{Mclean2011,
author = {Mclean, Christopher Alex},
file = {:Users/arrian/Desktop/COMP4540/Articles/Artist-Programmers and Programming Languages for the Arts - McLean.pdf:pdf},
number = {October},
title = {{and Programming Languages for the Arts}},
year = {2011}
}
@article{Aaron2011,
abstract = {This paper introduces Improcess, a novel cross-disciplinary collaborative project focussed on the design and development of tools to structure the communication between performer and musical process. We describe a 3-tiered architecture centering around the notion of a Common Music Runtime, a shared platform on top of which inter-operating client interfaces may be combined to form new musical instruments. This approach allows hardware devices such as the monome to act as an extended hardware interface with the same power to initiate and control musical processes as a bespoke programming language. Finally, we reflect on the structure of the collaborative project itself, which offers an opportunity to discuss general research strategy for conducting highly sophisticated technical research within a performing arts environment such as the development of a personal regime of preparation for performance.},
author = {Aaron, Samuel and Blackwell, Alan F and Hoadley, Richard and Regan, Tim},
editor = {Jensenius, Alexander Refsum and Tveit, Anders and God\o y, Rolf Inge and Overholt, Dan},
file = {:Users/arrian/Desktop/COMP4540/Articles/A Principled Approach to Developing New Languages for Live Coding - Aaron et al.pdf:pdf},
journal = {Nime},
keywords = {abstractions,collabora,concurrency,controllers,eu,figure 1,improvisation,live coding,monome,performing live,tion,tones,$\lambda$},
number = {June},
pages = {381--386},
publisher = {University of Oslo and Norwegian Academy of Music},
title = {{A principled approach to developing new languages for live coding}},
url = {http://www.nime2011.org/proceedings/papers/K04-Aaron.pdf},
year = {2011}
}
@article{Brown2007,
author = {Brown, AR and Sorensen, AC},
file = {:Users/arrian/Desktop/COMP4540/Articles/An Approach to Musical Live Coding - Sorensen and Brown.pdf:pdf},
journal = {\ldots of the International Computer Music \ldots},
title = {{aa-cell in practice: An approach to musical live coding}},
url = {http://eprints.qut.edu.au/39768},
year = {2007}
}
@article{Magnusson2013,
author = {Magnusson, Thor},
file = {:Users/arrian/Desktop/COMP4540/Articles/Algorithms as Scores - Coding Live Music - Magnusson.pdf:pdf},
pages = {19--23},
title = {{Coding Live Music}},
volume = {21},
year = {2013}
}
