id,aesthetic liveness,didactic liveness1,unspecified,Yes. Live editing2,I could not associate as haven't been to any live performance.,Probably not because I had the context set. If I was only listening it could give that feeling.3,Same as Q12 [The changing and addition of different parameters helped to understand it was live.],The changing and addition of different parameters helped to understand it was live.4,"Confusing when vis changed, once that was clear how the code worked was easier to understand.",Watching the program conveyed it as live. In-interpreter changes were impressive.5,I liked these visuals better but I still did not feel they represented the code or music very well. I would have liked to see more correspondence eg. hue = pitch size = temporal frequency or something similar ,"Yes, the code in particular gave a good feeling for the ""live""-ness of the performance. I guess we're used to auto-visualisations of music so that didn't contribute quite as much. Also I didn't feel the visualisations were very representitive of what was happening musically."6,Visualisations - not as much as first performance [2 didactic]. Doesn't seem to be linked with the code as much.,You can see code changing and visualisations changing as soon as code changes.7,"Code yes, especially when changing frequencies. Visualisations were nicer, but didn't change much.",Yes. Connection between code and vis was understandable.8,Yes. Response to code changes.,Yes9,Same comment as before except that I thought the last visualisations [2 didactic] were better and in hindsight helped more with communicating that the performance was live.,"Yes, the code change was more helpful in communicating that the performance was live but the visualisations were far more interesting to look at so it was good to have a combination of the two."10,Variation in visualisations in response to the code & music changes.,Yes - the appearance of code correlated with keyboard clicks®Õ11,Same answer. Code - yes. Visualisations - no,the code did the visualisations did not12,Same as before + further understanding of relation between numbers and music,Yes. When the artist changed the code the music changed eg. Changing number produced chages in tone and speed of the music pitch13,Same as before,Code definitely. Visualisations not so much - vis are cool but not clear what they represent14,No. Does the code influence visualisations? Influence is not clear.,No. visualisations need to be clearer in the code15,random noise' sequences when two instruments were playing was a really interesting metaphor but it didn't actually look random... too evenly distributed?,Plenty of 'live' electronic performances are pre-recorded. Code showed what the musician was doing physically. Visualisation explained how these actions translated into sound.16,Not really - seemed disconnected from performance,Kind of - the visualization seemed to change/evolve with the flow of the work - in sync??17,Again the code did. The visualisations not so much.,yes - seeing the code change and hearing the result. The visualisations were interesting but distracting.18,Much more of a pleasant addition this time. The visualizations were less dominating and more complementary.,The code yes. May be better having a second projection for visualisations.19,no. the visuals seemed to be timed? didn't seem to be live. The code typed seem to be live,no. you could see it was live from the typing - the visuals only responded to what was being typed.20,Understood the code much more the 2nd time around. Vis much more fun when you can see what he's doing & what's coming. Visualisations can *distract* from appreciation of code,Yes due to the way the visualisations changed according to which tracks were active.21,The interpreter/composer took care to slow down the music in a way I could follow and perceive.,"Mostly the hesitation of the cursor and that transitions between ""musical forms"" didn't occur at the most expected times."22,Yes. The triggers when the sounds are played.,"Yes. The ""progression bar[?]"" aspects interesting. More could be done giving interesting results. The feedback effect on trebbeles[?] etc..."23,The code conveys the message that the music is generated by live-modified LISP code. But the visualisation does not help :(,Both of the code and the visualisation shows the performance is live. The visualisation shows which function is responsible for which component of the music.24,"I define live as a boolean value. He was coding ""live"" in front of us so therefore it is live. So no, to me the visualisations did not help communicate to me the fact that this was live coding.",See part c [? Current section].25,code did -> could see then hear the changes. Visualisations just felt like a 90s windows screensaver that changed w/ each addition to the performance -> would've had more meaning if they added together rather then changed.,"live coding took a back seat to the visualisations in this case viualisations were a bit all over the shop + not all that meaningful. I assume it was representing the time of each element -> not very interesting or meaningful for chords, bleeps + base. Also the [circle in circle] aren't appear in time neither the [backtick in circle]. Generally took away from the code + not a good visualisation of what is going on."26,yes,Yes27,"Yes. Since I could see Ben coding on the screen. Also, it didn't sound very mechanical & perfect.",Yes.28,"The code certainly showed that it was live - typing of code and submission of changes. But I did not grasp the meaning of visualisations, even though it was interesting to watch. Some of the visualisation did not make much sense, and only made the code hard to read.",The visualisation now make a bit more sense.29,Not necessarily - seeing the code go up was a huge indicator but the visualisations did nothing to suggest it was live. Projected code: yes. Visualisations: no.,Projected code did as we saw it going out live. Visualisations not so much. Cool how they respond to the code/music but perhaps made performance seem too polished. This taking away fom live aspect of it.30,yeah - it was easy to experience he real-time correspondence between sound and what we could see.,"Yes, I found the projected visualisation a little simplistic. The code was much more interesting and stimulating."31,"Yes, you could see the connection between Ben's reactions/actions and the code changing (ie. Him typing), and the connection between the code changing and the music/visualisations changing.",Same as B. [aesthetic]32,Code helped enormously. I could see the coding affect the music - the creative process was vital to enjoying the experience (I'm normally not a music lover),The graphics were distracting in this set. It felt harder to understand the code but that may be bacause the music was putting me to sleep.33,Yes. Changes in variables within functions left me anticipating how the performance was also going to change as well.,The visualisations for this performance were overly distracting from the experience and thereby detracted from the notion that it was a live performance.34,"Yes, because they changed as the performanec progressed + were linked to code changes.",Yes -> they related to beat/completion of repeat + they were changing/added/removed as the code was edited.35,You could see the code being written and the visualisations helped to show when a piece of code started working.,It was easier to see when each of the elements were working at any given time.36,Yes. Changing of code that changed the music made it clear it was live,"The visualisations distracted from the code + because the focus. Still clear it was a live performance. Other than that, great."37,Yes. Dynamic nature and change clearly in response to Ben's commands.,"Yes but not as much; they were much more mechanistic, displaying the state of the algorithm more obviously than in the previous gig."38,Seeing the code was great & definitely made it feel 'live'. The visualisations are nice but I was mainly focussed on reading the code so didn't notice them much.,"This time the visualisations clearly showed the changes being made to the code, but I found them distracting & preferred just to read the code."39,Yes. The melody was so nice and the code also represent the name of instrument while the music was played.,Yes. I think so. It is because of the code used is so connected with the sound of instruments that are used.40,"Yes, because musician (programmer) is changing the code and I hear 2 see the effect on realtime.",Same as Q 12 [aesthetic liveness]41,Yes. You can see the feedback and how timing variables were changed according to Ben's feedback (how he gauged what he was hearing),The visualisations really helped to convey the timing required for each function to complete a cycle or period. It was easier to follow this visualisation than the code.