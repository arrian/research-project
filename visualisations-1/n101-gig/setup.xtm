;;; setup.xtm --- setup file for n101-gig
(sys:load "libs/xtm.xtm")

;; load in the libs
(sys:load (string-append *research-project-dir* "/visualisations-1/lib/callback_widget_array.xtm"))

;;;;;;;;;;;;;;;;;;;;
;; graphics setup ;;
;;;;;;;;;;;;;;;;;;;;

(sys:load "libs/external/cairo.xtm")

(define width 1920.0)
(define height 1080.0)
(bind-val width float 1920.0)
(bind-val height float 1080.0)
(define fullscreen #t)
(bind-val half_width float (/ width 2.0))
(bind-val half_height float (/ height 2.0))

;; Should be redefined in each visualisation
(bind-func draw
  (lambda (cr t:double)
		(cairo_set_source_rgba cr 0.0 0.0 0.0 1.0)
		(cairo_paint cr)
    void))

(bind-func gl_draw
  (let ((surface (cairo_image_surface_create CAIRO_FORMAT_RGB24 (convert  width) (convert  height)))
        (cr (cairo_create surface)))
  (lambda ()
    (glLoadIdentity)
    (draw cr (i64tod (now)))
    (gl_load_tex_bgr (convert width) (convert height) 4 GL_UNSIGNED_BYTE (cairo_image_surface_get_data surface) 5)
    (gl_draw_img_reverse -1.0 -1.0 2.0 2.0 180.0 5)
    void)))

(define draw-loop
  (lambda (time delta-t)
    (gl_draw)
    (gl:swap-buffers ctx)        
    (callback (+ time (* *second* delta-t) 0.5)
              'draw-loop
              (+ time (* *second* delta-t)) 
              delta-t)))

;;;;;;;;;;;;;;;;;
;; audio setup ;;
;;;;;;;;;;;;;;;;;

(sys:load (string-append *research-project-dir* "/visualisations-1/lib/vu-meter.xtm"))

;; set up the drum kit (symlink 'sample-libs' in the research-project
;; dir to wherever your drum samples are)
(define *user-sample-dir* (string-append *research-project-dir* "/sample-libs"))
(sys:load (string-append *research-project-dir* "/visualisations-1/lib/sampler-maps.xtm"))

(sys:load "libs/core/pc_ivl.xtm")



;; define the instruments

(define-sampler kit sampler_note_hermite_c sampler_fx)
(sm-load-map kit *NI-Dakeat-kit-sample-map*)
(sm-load-map kit *SSO-percussion-sample-map*)

(bind-func dsp:[SAMPLE,SAMPLE,i64,i64,SAMPLE*]* 100000
  (let ((vu_meter (vu_meter_c 8 1472))) ;; approx 30fps
    (lambda (in time chan dat)
      (+ (vu_meter chan 1 (epad in time chan dat))
         (vu_meter chan 2 (fmsynth in time chan dat))
         (vu_meter chan 3 (* .4 (fuzz_bass in time chan dat)))
         (vu_meter chan 0 (kit in time chan dat))))))

(dsp:set! dsp)
