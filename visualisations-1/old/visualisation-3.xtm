(define ctx (gl:make-ctx ":0.0" #f 0.0 0.0 900.0 600.0))

(sys:load "libs/external/cairo.xtm")

;; draw animated circles to an opengl context
(bind-func test2
  (let ((surface (cairo_image_surface_create CAIRO_FORMAT_RGB24 900 600))
  (cr (cairo_create surface)) 
  (i 0.0))
    (lambda (t:double)

      ;; scale image to fullscreen background
      (cairo_set_source_rgb cr 0.1 0.1 0.05)
      (cairo_paint cr)
      (dotimes (i 200.0)
        (cairo_set_source_rgba cr (* .005 i) (* 0.005 i) 0.7 1.0)
        (cairo_arc cr
             (+ 450.0 (* 350.0 (cos (* i t .00000003))))
             (+ 300.0 (* 200.0 (sin (* i t .0000002))))
             10.0 0.0 TWOPI)
        (cairo_stroke cr))
      ;(cairo_surface_flush surface)
      (cairo_image_surface_get_data surface))))
        

(bind-func gl_draw
  (lambda ()
    (glLoadIdentity)
    (gl_load_tex_bgr 900 600 4 GL_UNSIGNED_BYTE (test2 (i64tod (now))) 5)
    (gl_draw_img_reverse -1.0 -1.0 2.0 2.0 180.0 5)
    void))

(define cairo-animation
  (lambda (beat dur)
    (gl_draw)
    (gl:swap-buffers ctx)    
    (callback (*metro* (+ beat (* .5 dur))) 'cairo-animation (+ beat dur) dur)))

(cairo-animation (*metro* 'get-beat 4) 1/20)